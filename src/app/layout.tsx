import type { Metadata } from "next";
import { ReactNode } from "react";
import { AppRouterCacheProvider } from "@mui/material-nextjs/v15-appRouter";
import { ThemeProvider } from "@mui/material/styles";
import theme from "./theme";
import Typography from "@mui/material/Typography";
import { Roboto } from 'next/font/google';
import {alpha, AppBar, Box, Button, ButtonGroup, Container, CssBaseline, IconButton, InputAdornment, Menu, MenuItem, styled, TextField, Toolbar} from "@mui/material";
import ReduxProvider from "./store";
import Link from "next/link";
import MenuIcon from '@mui/icons-material/Menu'
import { AccountCircle, AccountCircleSharp, SearchSharp } from "@mui/icons-material";
import FetchUserData from "@/components/userDataProvider";
import PrimaryAppBar from "@/components/appBar";
import ThreadCard from "@/components/threadCard";
import Sidebar from "@/components/sidebar";
import HandleDeviceID from "@/components/deviceIdHandler";

const fetcher = (...args: [string, RequestInit?]) => fetch(...args).then(res => res.json);

const roboto = Roboto({
  weight: ['300', '400', '500', '700'],
  subsets: ['latin'],
  display: 'swap',
  variable: '--font-roboto'
});



export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: ReactNode;
}>) {

  // const { data, error, isLoading } = useSWR('https://localhost:3000/api/v1/authcheck', fetcher);
  // if (error || isLoading) {
  //   // do nothing
  // } else {

  // }

  return (
    <html lang="en">
    <head>
    </head>
    <CssBaseline />

    <body className={roboto.variable}>
      <ReduxProvider>
        <HandleDeviceID />
        <FetchUserData />
        <AppRouterCacheProvider>  
          <ThemeProvider theme={theme}>
            <PrimaryAppBar/>
            <Toolbar 
              sx={{
                marginBottom: '24px'
              }}
            />
            {children}
          </ThemeProvider>
        </AppRouterCacheProvider>
      </ReduxProvider>
    </body>

    </html>
  );
}
